import{r as u}from"./vendor-router-B0usbLSA.js";import{u as U,c as j,s as n,d as S}from"./useAuth-DT8mPBJ_.js";const q=()=>{const[m,g]=u.useState([]),[E,w]=u.useState(!1),{user:$,isConfigured:l}=U(),i=j($),p=u.useCallback(async()=>{if(!(!l||!i||!n)){w(!0);try{const{data:o,error:t}=await n.from("saved_images").select("*").eq("user_id",i).order("created_at",{ascending:!1});if(t)throw console.error("Fetch saved images error:",t),t;const r=(o||[]).filter(s=>!s||typeof s!="object"||!s.id?(console.warn("Invalid image data found:",s),!1):!0);console.log("Valid images loaded:",r.length,"out of",(o||[]).length),g(r)}catch(o){console.error("Fetch saved images error:",o)}finally{w(!1)}}},[l,i]);return u.useEffect(()=>{i&&l?p():g([])},[i,l,p]),{savedImages:m,loading:E,saveImage:async(o,t,r,s)=>{if(!l||!i||!n)return null;try{const e=await fetch(t);if(!e.ok)throw console.error(`Failed to fetch generated image for saving. Status: ${e.status}, URL: ${t}`),new Error(`Failed to fetch generated image for saving. Status: ${e.status}`);const a=await e.blob();if(!a.type.startsWith("image/"))throw console.error(`Generated image is not a valid image type: ${a.type}, URL: ${t}`),new Error(`Generated image is not a valid image type: ${a.type}`);if(a.size===0)throw console.error(`Generated image is empty (0 bytes), URL: ${t}`),new Error("Generated image is empty (0 bytes). The image generation service may be experiencing issues. Please try again.");const c=a.type.split("/")[1]||"jpg",f=`${Date.now()}.${c}`,h=`${i}/${f}`,y=await S(),{error:_}=await y?.storage.from("generated_images").upload(h,a,{cacheControl:"3600",upsert:!1,contentType:a.type||"image/jpeg"})||{error:new Error("Storage client not available")};if(_)throw _;const{data:{publicUrl:b}}=y?.storage.from("generated_images").getPublicUrl(h)||{data:{publicUrl:""}};if(!b)throw new Error("Failed to get public URL for the uploaded image.");const F={user_id:i,prompt:o,image_url:b,aspect_ratio:r,style:s,is_favorite:!1,storage_file_path:h},{data:d,error:v}=await n.from("saved_images").insert([F]).select().single();if(v)throw console.error("Database insert error:",v),v;return d&&typeof d=="object"&&d.id&&g(D=>[d,...D]),d}catch(e){return console.error("Save image error:",e),null}},deleteImage:async o=>{if(!(!l||!i||!n))try{const t=m.find(e=>e.id===o);if(!t)return;let r=t.storage_file_path;if(!r){const e=t.image_url.split("/"),a=e.indexOf("generated_images");a!==-1&&(r=e.slice(a+1).join("/"))}if(r&&r.includes("undefined")&&(console.warn("Invalid file path detected, skipping storage deletion:",r),r=null),r)try{const e=r.startsWith("/")?r.slice(1):r;console.log("Attempting to delete file from storage:",e),console.log("File path details:",{original:r,cleaned:e,userId:i});const a=await S(),{data:c,error:f}=await a?.storage.from("generated_images").remove([e])||{data:null,error:new Error("Storage client not available")};console.log("Storage deletion response:",{removeData:c,storageError:f}),f?console.warn("Storage deletion failed:",f):console.log("Successfully deleted file from storage:",e)}catch(e){console.warn("Storage deletion error:",e)}else console.warn("No file path available for storage deletion");const{error:s}=await n.from("saved_images").delete().eq("id",o).eq("user_id",i);if(s)throw s;g(e=>e.filter(a=>a.id!==o))}catch(t){throw t}},toggleFavorite:async o=>{if(!(!l||!i||!n))try{const t=m.find(a=>a.id===o);if(!t){console.warn("Image not found for favorite toggle:",o);return}const r=!t.is_favorite;console.log("Toggling favorite for image:",o,"from",t.is_favorite,"to",r);const{data:s,error:e}=await n.from("saved_images").update({is_favorite:r}).eq("id",o).eq("user_id",i).select().single();if(e)throw console.error("Error updating favorite status:",e),e;console.log("Database update successful, received data:",s),g(a=>a.map(c=>c.id===o?s&&typeof s=="object"&&s.id?(console.log("Updating image with database data:",s),s):(console.log("Updating image locally with new favorite status"),{...c,is_favorite:r}):c))}catch(t){throw console.error("Toggle favorite error:",t),t}},refreshImages:p}};export{q as u};
